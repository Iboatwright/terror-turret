apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "edu.fgcu.terrorturret"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        lintOptions {
            disable 'GoogleAppIndexingWarning'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.25.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.25.0'

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.media:media:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'

    implementation 'com.google.android.material:material:1.1.0-alpha01'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'io.github.controlwear:virtualjoystick:1.9.2'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    implementation project(':libwebrtc_19324')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

gradle.buildFinished { buildResult ->
    if (buildResult.failure) {
        println ''
        println 'Build failure? The Terror Turret will remember this...'
    } else {
        println ''
        println 'Build successful - the Terror Turret will rule them all!'
    }
}
